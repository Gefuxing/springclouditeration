#server:
#  port: 8801
#
#spring:
#  application:
#    name: cloud-stream-provider
#  zipkin:
#    base-url: http://10.130.20.230:9411/
#    sleuth:
#      sampler:
#        probability: 1.0
#  cloud:
#    stream:
#      binders: # 在此处配置要绑定的rabbitmq的服务信息；
#        defaultRabbit: # 表示定义的名称，用于于binding整合
#          type: rabbit # 消息组件类型
#          environment: # 设置rabbitmq的相关的环境配置
#            spring:
#              rabbitmq:
#                host: 10.60.128.134
#                port: 28183
#                username: admin
#                password: admin
#      bindings: # 服务的整合处理
#        output: # 这个名字是一个通道的名称
#          destination: studyExchange # 表示要使用的Exchange名称定义
#          content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
#          binder: defaultRabbit  # 设置要绑定的消息服务的具体设置
#
#eureka:
#  client: # 客户端进行Eureka注册的配置
#    service-url:
#      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka
#  instance:
#    lease-renewal-interval-in-seconds: 2 # 设置心跳的时间间隔（默认是30秒）
#    lease-expiration-duration-in-seconds: 5 # 如果现在超过了5秒的间隔（默认是90秒）
#    instance-id: send-8801.com  # 在信息列表时显示主机名称
#    prefer-ip-address: true     # 访问的路径变为IP地址
#
#

server:
  port: 8801
spring:
  application:
    name: kafka-producer
  cloud:
    stream:
      kafka:
        binder:
          brokers: 10.130.16.246:31608          #Kafka的消息中间件服务器
          zk-nodes: 10.130.16.246:29359        #Zookeeper的节点，如果集群，后面加,号分隔
          auto-create-topics: true        #如果设置为false,就不会自动创建Topic 有可能你Topic还没创建就直接调用了。
          transaction:
            producer:
              sync: true
      bindings:
        output:      #这里用stream给我们提供的默认output，后面会讲到自定义output
          content-type: application/json    #消息发送的格式，接收端不用指定格式，但是发送端

